{"ast":null,"code":"var _jsxFileName = \"/home/j/weather-app2/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport SearchBar from \"./components/SearchBar\";\nimport WeatherCard from \"./components/WeatherCard\";\nimport Footer from \"./components/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const fetchWeather = async city => {\n    setLoading(true);\n    try {\n      const apiKey = \"c1115bb80946be511eefd50639647587\"; // Your API key here\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`);\n      const data = await response.json();\n      setWeatherData(data);\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: fetchWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center mt-8\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(WeatherCard, {\n      weatherData: weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"O0HiUliFukUtyzycdeiYpF3jMJs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Header","SearchBar","WeatherCard","Footer","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","loading","setLoading","fetchWeather","city","apiKey","response","fetch","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["/home/j/weather-app2/src/App.js"],"sourcesContent":["// src/App.js\nimport { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport SearchBar from \"./components/SearchBar\";\nimport WeatherCard from \"./components/WeatherCard\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const fetchWeather = async (city) => {\n    setLoading(true);\n    try {\n      const apiKey = \"c1115bb80946be511eefd50639647587\"; // Your API key here\n      const response = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`\n      );\n      const data = await response.json();\n      setWeatherData(data);\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"bg-gray-100 min-h-screen\">\n      <Header />\n      <SearchBar onSearch={fetchWeather} />\n      {loading ? (\n        <p className=\"text-center mt-8\">Loading...</p>\n      ) : (\n        <WeatherCard weatherData={weatherData} />\n      )}\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMa,YAAY,GAAG,MAAOC,IAAI,IAAK;IACnCF,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMG,MAAM,GAAG,kCAAkC,CAAC,CAAC;MACnD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qDAAqDH,IAAI,uBAAuBC,MAAM,EACxF,CAAC;MACD,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCT,cAAc,CAACQ,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKgB,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACvCjB,OAAA,CAACL,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVrB,OAAA,CAACJ,SAAS;MAAC0B,QAAQ,EAAEf;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACpChB,OAAO,gBACNL,OAAA;MAAGgB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE9CrB,OAAA,CAACH,WAAW;MAACM,WAAW,EAAEA;IAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACzC,eACDrB,OAAA,CAACF,MAAM;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACnB,EAAA,CAhCID,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAkCT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}